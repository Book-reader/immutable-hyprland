# image will be published to ghcr.io/<user>/<name>
name: immutable-hyprland
# description will be included in the image's metadata
description: This is my personal OS image.

# the base image to build on top of (FROM) and the version tag to use
#base-image: ghcr.io/ublue-os/silverblue-main
#image-version: 40 # latest is also supported if you want new updates ASAP
base-image: quay.io/fedora-ostree-desktops/base
image-version: 40 # latest is also supported if you want new updates ASAP

# module configuration, executed in order
# you can include multiple instances of the same module
modules:
  - type: files
    files:
      - usr: /usr # copies config/files/usr into your image's /usr.
                  # put configuration files you want in /etc/ on a booted system 
                  # in /usr/etc/ in the image. read more in files module reference.

  - type: rpm-ostree
    repos:
      # starship prompt
      - https://copr.fedorainfracloud.org/coprs/atim/starship/repo/fedora-%OS_VERSION%/atim-starship-fedora-%OS_VERSION%.repo
       # hyprland & related
      - https://copr.fedorainfracloud.org/coprs/solopasha/hyprland/repo/fedora-%OS_VERSION%/solopasha-hyprland-fedora-%OS_VERSION%.repo
       # tofi app launcher
      - https://copr.fedorainfracloud.org/coprs/alternateved/tofi/repo/fedora-%OS_VERSION%/alternateved-tofi-fedora-%OS_VERSION%.repo
       # My ly build
      - https://copr.fedorainfracloud.org/coprs/book-reader/ly/repo/fedora-%OS_VERSION%/book-reader-ly-fedora-%OS_VERSION%.repo
    install:
      # RPMFUSION
      - https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-40.noarch.rpm
      - https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-40.noarch.rpm
      - starship
      - hyprland
      - hyprlock
      - hypridle
      - hyprpaper
      - flameshot
      - alacritty
      - tofi
      - rofi-wayland
      - ly-git
      - vim
      - fish
      - fastfetch
      - waybar
      - distrobox
      - nemo
      - nemo-fileroller
      - ffmpegthumbnailer
      - NetworkManager-tui
      - network-manager-applet
      - blueman
      - htop
      - zoxide
      - trash-cli
      - eza
      - wl-clipboard
      - polkit-gnome
      - pavucontrol
      - pamixer
      - tlp
    remove:
      # example: removing firefox (in favor of the flatpak)
      # "firefox" is the main package, "firefox-langpacks" is a dependency
      - firefox
      - firefox-langpacks # also remove firefox dependency (not required for all packages, this is a special case)

  # A fun workaround
  - type: rpm-ostree
    install:
      - ffmpeg
    remove:
      - ffmpeg-free
      - libavcodec-free
      - libavdevice-free
      - libavfilter-free
      - libavformat-free
      - libavutil-free
      - libpostproc-free
      - libswresample-free
      - libswscale-free
      - kitty

  - type: script
    scripts:
      - xonsh.sh # installs xonsh shell in venv

  - type: default-flatpaks
    notify: true # Send notification after install/uninstall is finished (true/false)
    system:
      # If no repo information is specified, Flathub will be used by default
      repo-url: https://dl.flathub.org/repo/flathub.flatpakrepo
      repo-name: flathub
      # repo-title: "Flathub (system-wide)" # Optional; this sets the remote's user-facing name in graphical frontends like GNOME Software
      install:
        - net.waterfox.waterfox
        - org.gnome.Evince
        - org.gnome.Loupe
        - org.gnome.FileRoller
        - com.github.d4nj1.tlpui
        # - org.gnome.Loupe
        # - one.ablaze.floorp//lightning # This is an example of flatpak which has multiple branches in selection (flatpak//branch).
      # Flatpak runtimes are not supported (like org.winehq.Wine//stable-23.08),
      # only normal flatpak applications are (like Floorp Lightning web browser in this example).
      # Installing different branches of the same Flatpak is not supported.
      remove:
      # - org.gnome.eog
  - type: systemd
    system:
      enabled:
        - ly.service # Enabled (runs on system boot)
        - tlp.service

  - type: files
    files:
      - usr: /usr # copies config/files/usr into your images /usr

  - type: signing # this sets up the proper policy & signing files for signed images to work fully

